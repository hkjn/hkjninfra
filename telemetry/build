#!/usr/bin/env bash
#
# Build telemetry binaries in Docker container.
#

set -euo pipefail

# Note: golang-1.2.12 also has libz.so.1 issues from protoc; trying in 1.2.13+ to compile
# protoc in alpine container with golang 1.9.
# Note: zero-1.2.5 is defined in repo, but not pushed.. build broken?
# Note: zero-1.1.3 builds binaries fine, but they are dynamically linked, which
# allows boot but doesn't start report_service for zg3.hkjn.me.
declare BUILD_IMAGE="hkjn/workspace:$(uname -m)-zero-1.3.1"
declare BUILD_DIR="$(mktemp -d telemetry_build_XXXX --tmpdir=/tmp)"
declare BASE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd ${BASE_DIR}

echo "Building from ${BUILD_IMAGE} in '${BUILD_DIR}'.."
trap "rm -rf ${BUILD_DIR}" EXIT
sed "s|{{ARG_FROM}}|${BUILD_IMAGE}|g" Dockerfile.build > ${BUILD_DIR}/Dockerfile
cp -r {client,server,report,vendor} ${BUILD_DIR}
echo "package main" > ${BUILD_DIR}/client/version.go
echo "const Version=\"$(cat ../VERSION)\"" >> ${BUILD_DIR}/client/version.go

echo "package main" > ${BUILD_DIR}/server/version.go
echo "const Version=\"$(cat ../VERSION)\"" >> ${BUILD_DIR}/server/version.go

# TODO: Use heredoc or set build parameter as argument.
docker build -t telemetry-build ${BUILD_DIR}
echo "Running tbuild container.."
docker run --name tbuild telemetry-build
echo "Removing bin.."
rm -rf bin/
docker cp tbuild:/home/user/bin/ $(pwd)
docker rm tbuild
mv -v bin/tclient* bin/tserver* .
echo "tclient* should be statically linked here: $(ldd tclient*)"
if ldd tclient*; then
	echo "FATAL: tclient binaries should be statically linked" >&2
	exit 1
fi
mv -v bin/report/*.pb.go report/
rm -rf bin/
