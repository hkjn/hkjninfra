#
# Create CA, server and client certificates.
#
set -euo pipefail

declare ADDRESS=mon.hkjn.me
declare SERVER_NAME=server
declare CLIENT_NAME=client
declare BASE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if ! which cfssljson 1>/dev/null; then
	echo "FATAL: No cfssljson present on PATH." >&2
	exit
fi

cd ${BASE_DIR}
mkdir -p certs/
cd certs
echo '{"CN":"CA","key":{"algo":"rsa","size":4096}}' | cfssl gencert -initca - | cfssljson -bare ca -
echo '{"signing":{"default":{"expiry":"43800h","usages":["signing","key encipherment","server auth","client auth"]}}}' > ca-config.json
echo '{"CN":"'${SERVER_NAME}'","hosts":[""],"key":{"algo":"rsa","size":4096}}' | cfssl gencert -config=ca-config.json -ca=ca.pem -ca-key=ca-key.pem -hostname="${ADDRESS}" - | cfssljson -bare ${SERVER_NAME}

echo '{"CN":"'${CLIENT_NAME}'","hosts":[""],"key":{"algo":"rsa","size":4096}}' | cfssl gencert -config=ca-config.json -ca=ca.pem -ca-key=ca-key.pem -hostname="" - | cfssljson -bare ${CLIENT_NAME}

rm *.csr
rm ca-config.json

openssl x509 -in ca.pem -text -noout
openssl x509 -in server.pem -text -noout
openssl x509 -in client.pem -text -noout
